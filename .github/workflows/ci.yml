name: Deploy to EC2

on:
  push:
    branches:
      - main  # Trigger on push to main branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install SSH Key
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Deploy to EC2 instance
      run: |
        ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
          # Navigate to the application directory, or clone the repository if it doesn't exist
          if [ ! -d "/home/${{ secrets.EC2_USER }}/my-app" ]; then
            git clone https://github.com/GeorgeOkarskyi/postage_store_backend.git /home/${{ secrets.EC2_USER }}/my-app
          fi
          cd /home/${{ secrets.EC2_USER }}/my-app

          # Pull the latest changes from the main branch
          git checkout main
          git pull origin main

          # Create or update the .env file
          echo "MIKRO_ORM_DB_NAME=${{ secrets.MIKRO_ORM_DB_NAME }}" > .env
          echo "MIKRO_ORM_USER=${{ secrets.MIKRO_ORM_USER }}" >> .env
          echo "MIKRO_ORM_PASSWORD=${{ secrets.MIKRO_ORM_PASSWORD }}" >> .env
          echo "MIKRO_ORM_HOST=${{ secrets.MIKRO_ORM_HOST }}" >> .env
          echo "MIKRO_ORM_PORT=${{ secrets.MIKRO_ORM_PORT }}" >> .env
          echo "ENVIRONMENT=${{ secrets.ENVIRONMENT }}" >> .env
          echo "TOKEN_KEY=${{ secrets.TOKEN_KEY }}" >> .env

          # Install dependencies
          npm install

          # Create Migrations
          npm run migration:create

          # Up migrations
          npm run migration:up

          # Start the application using PM2 or nohup so it runs in the background and doesn't block the SSH session
          if ! [ -x "$(command -v pm2)" ]; then
            sudo npm install pm2 -g
          fi

          # Start or restart the application with PM2 (background process manager)
          pm2 restart "my-app" --name "my-app" -- run start
        EOF
